<UserControl x:Class="GGs.Desktop.Views.Admin.TweakManagementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d">
    
    <!-- Keyboard shortcuts -->
    <UserControl.InputBindings>
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewCommand}"/>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveCommand}"/>
        <KeyBinding Gesture="Delete" Command="{Binding DeleteCommand}"/>
        <KeyBinding Gesture="Ctrl+E" Command="{Binding ExecuteLocalCommand}"/>
        <KeyBinding Gesture="Ctrl+Z" Command="{Binding UndoCommand}"/>
        <KeyBinding Gesture="Ctrl+Y" Command="{Binding RedoCommand}"/>
    </UserControl.InputBindings>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal">
            <Button Content="Refresh" Command="{Binding RefreshCommand}"/>
            <Button Content="New" Margin="6,0,0,0" Command="{Binding NewCommand}" IsEnabled="{Binding AllowedEdit}"/>
            <Button Content="Save" Margin="6,0,0,0" Command="{Binding SaveCommand}" IsEnabled="{Binding AllowedEdit}"/>
            <Button Content="Delete" Margin="6,0,0,0" Command="{Binding DeleteCommand}" IsEnabled="{Binding AllowedDelete}"/>
            <Separator Width="16"/>
            <Button Content="Execute Locally" Margin="6,0,0,0" Command="{Binding ExecuteLocalCommand}" IsEnabled="{Binding AllowedExecute}"/>
            <Button Content="Undo" Margin="6,0,0,0" Command="{Binding UndoCommand}"/>
            <Button Content="Redo" Margin="6,0,0,0" Command="{Binding RedoCommand}"/>
            <Separator Width="16"/>
            <Button Content="Export Profile" Margin="6,0,0,0" Command="{Binding ExportProfileCommand}"/>
            <Button Content="Import Profile" Margin="6,0,0,0" Command="{Binding ImportProfileCommand}"/>
        </StackPanel>

        <Grid Grid.Row="1" Margin="0,8,0,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <DataGrid ItemsSource="{Binding Tweaks}"
                      SelectedItem="{Binding SelectedTweak}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      SelectionMode="Single">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                    <DataGridTextColumn Header="Category" Binding="{Binding Category}" Width="120"/>
                    <DataGridTextColumn Header="Type" Binding="{Binding CommandType}" Width="100"/>
                    <DataGridTextColumn Header="Safety" Binding="{Binding Safety}" Width="100"/>
                    <DataGridTextColumn Header="Risk" Binding="{Binding Risk}" Width="100"/>
                    <DataGridCheckBoxColumn Header="Admin" Binding="{Binding RequiresAdmin}" Width="60"/>
                    <DataGridCheckBoxColumn Header="Undo" Binding="{Binding AllowUndo}" Width="60"/>
                </DataGrid.Columns>
            </DataGrid>

            <ScrollViewer Grid.Column="1" Margin="8,0,0,0">
                <StackPanel>
                    <TextBlock Text="Tweak Details" FontWeight="Bold" FontSize="14"/>

                    <TextBlock Text="Name"/>
                    <TextBox Text="{Binding EditModel.Name, UpdateSourceTrigger=PropertyChanged}"/>

                    <TextBlock Text="Description" Margin="0,8,0,0"/>
                    <TextBox Text="{Binding EditModel.Description}" AcceptsReturn="True" Height="60" TextWrapping="Wrap"/>

                    <TextBlock Text="Category" Margin="0,8,0,0"/>
                    <TextBox Text="{Binding EditModel.Category}"/>

                    <TextBlock Text="Command Type" Margin="0,8,0,0"/>
                    <ComboBox ItemsSource="{Binding CommandTypes}" SelectedItem="{Binding EditModel.CommandType}"/>

                    <Expander Header="Registry" Margin="0,8,0,0" IsExpanded="True">
                        <StackPanel>
                            <TextBlock Text="Path"/>
                            <TextBox Text="{Binding EditModel.RegistryPath}"/>
                            <TextBlock Text="Value Name"/>
                            <TextBox Text="{Binding EditModel.RegistryValueName}"/>
                            <TextBlock Text="Value Type (String,DWord,QWord,MultiString,Binary)"/>
                            <TextBox Text="{Binding EditModel.RegistryValueType}"/>
                            <TextBlock Text="Value Data"/>
                            <TextBox Text="{Binding EditModel.RegistryValueData}"/>
                        </StackPanel>
                    </Expander>

                    <Expander Header="Service" Margin="0,8,0,0">
                        <StackPanel>
                            <TextBlock Text="Service Name"/>
                            <TextBox Text="{Binding EditModel.ServiceName}"/>
                            <TextBlock Text="Action"/>
                            <ComboBox ItemsSource="{Binding ServiceActions}" SelectedItem="{Binding EditModel.ServiceAction}"/>
                        </StackPanel>
                    </Expander>

                    <Expander Header="Script" Margin="0,8,0,0">
                        <StackPanel>
                            <TextBlock Text="PowerShell Script"/>
                            <TextBox Text="{Binding EditModel.ScriptContent}" AcceptsReturn="True" Height="120" TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>

                    <Expander Header="Security Policy" Margin="0,8,0,0" IsExpanded="False">
                        <StackPanel>
                            <TextBlock Text="Agent Script Policy Mode (affects PowerShell-based tweaks)" FontWeight="Bold"/>
                            <StackPanel Orientation="Horizontal" Margin="0,4,0,4">
                                <TextBlock Text="Current Mode:" Width="120"/>
                                <ComboBox ItemsSource="{Binding ScriptModes}" SelectedItem="{Binding ScriptMode}" Width="180"/>
                                <Button Content="Apply (Admin)" Margin="8,0,0,0" Command="{Binding ApplyScriptModeCommand}"/>
                            </StackPanel>
                            <TextBlock TextWrapping="Wrap" Foreground="Gray">
                                Changing the mode writes GGS_SCRIPTS_MODE at the machine level and broadcasts an environment change.
                                Strict: only safe allowlisted commands; Moderate: blocks risky tokens; Permissive: allow all.
                                You may need to restart the GGsAgent service for the change to fully apply.
                            </TextBlock>
                        </StackPanel>
                    </Expander>

                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                        <CheckBox Content="Requires Admin" IsChecked="{Binding EditModel.RequiresAdmin}"/>
                        <CheckBox Content="Allow Undo" Margin="12,0,0,0" IsChecked="{Binding EditModel.AllowUndo}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <StackPanel>
                            <TextBlock Text="Safety"/>
                            <ComboBox ItemsSource="{Binding SafetyLevels}" SelectedItem="{Binding EditModel.Safety}"/>
                        </StackPanel>
                        <StackPanel Margin="12,0,0,0">
                            <TextBlock Text="Risk"/>
                            <ComboBox ItemsSource="{Binding RiskLevels}" SelectedItem="{Binding EditModel.Risk}"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <StatusBar Grid.Row="2">
            <TextBlock Text="{Binding Status}"/>
        </StatusBar>
    </Grid>
</UserControl>

